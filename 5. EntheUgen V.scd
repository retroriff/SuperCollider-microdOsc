/**
_____________________________________________________________________________/\\\________/\\\\\_________________________________
 ____________________________________________________________________________\/\\\______/\\\///\\\_______________________________
  ______________________/\\\__________________________________________________\/\\\____/\\\/__\///\\\_____________________________
   ____/\\\\\__/\\\\\___\///______/\\\\\\\\__/\\/\\\\\\\______/\\\\\___________\/\\\___/\\\______\//\\\__/\\\\\\\\\\_____/\\\\\\\\_
    __/\\\///\\\\\///\\\__/\\\___/\\\//////__\/\\\/////\\\___/\\\///\\\____/\\\\\\\\\__\/\\\_______\/\\\_\/\\\//////____/\\\//////__
     _\/\\\_\//\\\__\/\\\_\/\\\__/\\\_________\/\\\___\///___/\\\__\//\\\__/\\\////\\\__\//\\\______/\\\__\/\\\\\\\\\\__/\\\_________
      _\/\\\__\/\\\__\/\\\_\/\\\_\//\\\________\/\\\_________\//\\\__/\\\__\/\\\__\/\\\___\///\\\__/\\\____\////////\\\_\//\\\________
       _\/\\\__\/\\\__\/\\\_\/\\\__\///\\\\\\\\_\/\\\__________\///\\\\\/___\//\\\\\\\/\\____\///\\\\\/______/\\\\\\\\\\__\///\\\\\\\\_
        _\///___\///___\///__\///_____\////////__\///_____________\/////______\///////\//_______\/////_______\//////////_____\////////__
*/

(
~blip1 = {
    var sig1, sig2;
    sig1 = Saw.ar(
        freq: [MouseX.kr(200, 400), MouseX.kr(200, 400) * 1.05]
    );
    sig2 = LFPulse.kr(
        freq: SinOscFB.kr(~tempo.kr / 8).range(4, 16),
        width:SinOscFB.kr(~tempo.kr / 8).range(0.2, 1),
    );
    sig1 * sig2 * 0.2;
}
)

(
~blip2 = {
    var sig1, sig2;
    sig1 = LFPulse.kr(
        freq: ~tempo.kr * 8,
        iphase: 0,
        width: 0.2,
        mul: SinOscFB.kr(~tempo.kr / 16).range(0.1, 1)
    );
    sig2 = SinOsc.ar(300);
    sig1 * sig2;
}
)

(
~blip3 = {
    var sig1, sig2;
    sig1 = LFPulse.kr(
        freq: ~tempo.kr * 8,
        iphase: 1,
        width: 0.2,
        mul: SinOscFB.kr(~tempo.kr / 16).range(0.1, 0.2)
    );
    sig2 = SinOsc.ar(freq: [600, 605], mul: 0.2);
    sig1 * sig2;
}
)

(
~blip4 = {
    LFPulse.ar(
        freq: SinOscFB.kr(freq: ~tempo.kr * 4, feedback: 1).range(300, 600),
        iphase: 0,
        width: SinOscFB.kr(~tempo.kr).range(0, 1),
        mul: SinOsc.kr(~tempo.kr / 4).range(0.2, 1) * 0.1
    );
}
)
